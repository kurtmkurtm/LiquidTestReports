trigger:
  - master

pool:
  vmImage: "windows-latest"

variables:
  buildConfiguration: "Release"
  majorVersion: 2
  minorVersion: 0
  patchVersion: 0
  suffix: "beta"

stages:
  - stage: Version
    displayName: Versioning
    jobs:
      - job: Version
        variables:
          betaVersion: $[counter(format('{0}.{1}.{2}-{3}', variables['majorVersion'], variables['minorVersion'], variables['patchVersion'], variables['suffix']), 1)]
        steps:
          - task: PowerShell@2
            inputs:
              targetType: "inline"
              script: |
                Write-Host "##vso[build.updatebuildnumber]$(majorVersion).$(minorVersion).$(patchVersion)-$(suffix).$(betaVersion)"
  - stage: Build
    jobs:
      - job: Build
        displayName: Build_Projects
        steps:
          - task: DotNetCoreCLI@2
            displayName: "dotnet restore"
            inputs:
              command: restore
              projects: "**/*.csproj"

          - task: DotNetCoreCLI@2
            displayName: "dotnet build"
            inputs:
              projects: |
                **/*.sln
              arguments: "-p:Version=$(Build.BuildNumber) -c $(buildConfiguration)"

          - task: DotNetCoreCLI@2
            displayName: "dotnet test"
            inputs:
              command: test
              projects: |
                **/LiquidTestReports.Core.Tests.csproj
                **/LiquidTestReports.Cli.Tests.csproj
              arguments: "--no-build -c $(buildConfiguration)"

          - task: DotNetCoreCLI@2
            displayName: "dotnet pack"
            inputs:
              command: custom
              projects: |
                **/LiquidTestReports.Core.csproj
                **/LiquidTestReports.Markdown.csproj
                **/LiquidTestReports.Custom.csproj
                **/LiquidTestReports.Cli.csproj
              custom: pack
              arguments: "--no-build -o $(Build.ArtifactStagingDirectory) -c $(buildConfiguration) -p:PackageVersion=$(Build.BuildNumber)"
              versioningScheme: byBuildNumber

          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact"
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: "drop"
              publishLocation: "Container"
